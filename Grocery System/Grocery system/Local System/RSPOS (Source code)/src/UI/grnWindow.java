/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import database.dbConnection;
import java.awt.HeadlessException;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Thanula Ramasinghe
 */
public class grnWindow extends javax.swing.JPanel {

    /**
     * Creates new form subWindow
     */
    public grnWindow() {
   
            initComponents();
            barcode_update();
            supTable();
            productsTable();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        grn_txt_productid = new javax.swing.JTextField();
        grn_btn_enter = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        grn_txt_quantity = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        grn_txt_year = new javax.swing.JComboBox();
        grn_txt_month = new javax.swing.JComboBox();
        grn_txt_dates = new javax.swing.JComboBox();
        grn_txt_ex_year = new javax.swing.JComboBox();
        grn_txt_ex_month = new javax.swing.JComboBox();
        grn_txt_ex_date = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        grn_txt_amount = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        grn_lbl_barcode = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel11 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        grn_txt_supID = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        grn_tbl_products = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        grn_tbl_sup = new javax.swing.JTable();
        grn_btn_printlbl = new javax.swing.JButton();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        setBackground(new java.awt.Color(234, 234, 254));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        setLayout(null);

        jLabel1.setText("Product ID");
        add(jLabel1);
        jLabel1.setBounds(11, 154, 60, 14);

        jLabel2.setText("Supplied Date");
        add(jLabel2);
        jLabel2.setBounds(11, 234, 90, 14);

        grn_txt_productid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                grn_txt_productidKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grn_txt_productidKeyTyped(evt);
            }
        });
        add(grn_txt_productid);
        grn_txt_productid.setBounds(111, 151, 100, 30);

        grn_btn_enter.setText("Add ");
        grn_btn_enter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grn_btn_enterActionPerformed(evt);
            }
        });
        add(grn_btn_enter);
        grn_btn_enter.setBounds(128, 411, 55, 23);

        jLabel3.setText("Supplier ID");
        add(jLabel3);
        jLabel3.setBounds(11, 194, 70, 14);

        jLabel4.setText("Quantity");
        add(jLabel4);
        jLabel4.setBounds(11, 274, 60, 14);

        grn_txt_quantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grn_txt_quantityActionPerformed(evt);
            }
        });
        grn_txt_quantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                grn_txt_quantityKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grn_txt_quantityKeyTyped(evt);
            }
        });
        add(grn_txt_quantity);
        grn_txt_quantity.setBounds(111, 274, 80, 30);

        jLabel5.setText("Expire Date");
        add(jLabel5);
        jLabel5.setBounds(11, 314, 70, 14);

        grn_txt_year.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2014", "2015", " " }));
        grn_txt_year.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grn_txt_yearActionPerformed(evt);
            }
        });
        add(grn_txt_year);
        grn_txt_year.setBounds(111, 234, 80, 20);

        grn_txt_month.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        add(grn_txt_month);
        grn_txt_month.setBounds(201, 234, 60, 20);

        grn_txt_dates.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", " " }));
        add(grn_txt_dates);
        grn_txt_dates.setBounds(271, 234, 60, 20);

        grn_txt_ex_year.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025" }));
        add(grn_txt_ex_year);
        grn_txt_ex_year.setBounds(111, 314, 80, 20);

        grn_txt_ex_month.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        add(grn_txt_ex_month);
        grn_txt_ex_month.setBounds(201, 314, 60, 20);

        grn_txt_ex_date.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", " " }));
        grn_txt_ex_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grn_txt_ex_dateActionPerformed(evt);
            }
        });
        add(grn_txt_ex_date);
        grn_txt_ex_date.setBounds(271, 314, 60, 20);

        jLabel6.setText("Total Amount");
        add(jLabel6);
        jLabel6.setBounds(11, 352, 72, 14);

        grn_txt_amount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grn_txt_amountActionPerformed(evt);
            }
        });
        grn_txt_amount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grn_txt_amountKeyTyped(evt);
            }
        });
        add(grn_txt_amount);
        grn_txt_amount.setBounds(111, 352, 100, 30);

        jLabel7.setText("Barcode");
        add(jLabel7);
        jLabel7.setBounds(11, 113, 63, 14);
        add(grn_lbl_barcode);
        grn_lbl_barcode.setBounds(111, 113, 100, 20);

        jLabel9.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jLabel9.setText("GRN");
        add(jLabel9);
        jLabel9.setBounds(296, 23, 44, 14);
        add(jLabel8);
        jLabel8.setBounds(579, 230, 0, 0);

        jLabel10.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel10.setText("Choose Product");
        add(jLabel10);
        jLabel10.setBounds(445, 57, 129, 22);
        add(jSeparator1);
        jSeparator1.setBounds(584, 69, 105, 10);
        add(jSeparator2);
        jSeparator2.setBounds(344, 69, 97, 10);

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        add(jSeparator3);
        jSeparator3.setBounds(337, 85, 8, 403);

        jLabel11.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel11.setText("Choose Supplier");
        add(jLabel11);
        jLabel11.setBounds(446, 273, 133, 22);
        add(jSeparator4);
        jSeparator4.setBounds(346, 285, 96, 10);
        add(jSeparator5);
        jSeparator5.setBounds(584, 285, 105, 10);

        grn_txt_supID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grn_txt_supIDActionPerformed(evt);
            }
        });
        grn_txt_supID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                grn_txt_supIDKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grn_txt_supIDKeyTyped(evt);
            }
        });
        add(grn_txt_supID);
        grn_txt_supID.setBounds(111, 191, 100, 30);

        grn_tbl_products.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Name", "Price", "Stock Qty."
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grn_tbl_products.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grn_tbl_productsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(grn_tbl_products);

        add(jScrollPane1);
        jScrollPane1.setBounds(360, 110, 330, 130);

        grn_tbl_sup.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Supplier ID", "Name", "NIC"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grn_tbl_sup.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grn_tbl_supMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(grn_tbl_sup);
        if (grn_tbl_sup.getColumnModel().getColumnCount() > 0) {
            grn_tbl_sup.getColumnModel().getColumn(0).setPreferredWidth(20);
        }

        add(jScrollPane4);
        jScrollPane4.setBounds(360, 330, 330, 130);

        grn_btn_printlbl.setText("Print Label");
        grn_btn_printlbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grn_btn_printlblActionPerformed(evt);
            }
        });
        add(grn_btn_printlbl);
        grn_btn_printlbl.setBounds(210, 410, 90, 23);
    }// </editor-fold>//GEN-END:initComponents

    private void grn_btn_enterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grn_btn_enterActionPerformed

        int tryval2 = GRNnullValidate();
          
          if(tryval2 == 0)
          {
              int tryval3 =  GRNcontentValidate();
              
              if(tryval3 == 0)
              {
          
       
        
        try {
          System.out.println("working");  //for testing
            
          Statement con = dbConnection.db().createStatement();  // making connection to Database 
          
          
          con.executeUpdate("INSERT INTO supplied_products VALUES('0','"+grn_txt_productid.getText()+"','"+grn_txt_supID.getText()+"','"+grn_txt_quantity.getText()+"','"+grn_txt_year.getSelectedItem()+"-"+grn_txt_month.getSelectedItem()+"-"+grn_txt_dates.getSelectedItem()+"','"
                                +grn_txt_ex_year.getSelectedItem()+"-"+grn_txt_ex_month.getSelectedItem()+"-"+grn_txt_ex_date.getSelectedItem()+"','"+grn_txt_amount.getText()+"')");
            
          con.executeUpdate("INSERT INTO stock VALUES('"+grn_lbl_barcode.getText()+"','"+grn_txt_productid.getText()+"','"+grn_txt_quantity.getText()+"')");
          JOptionPane.showMessageDialog(null, "Successfully inserted...!");
        
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error...!");
            System.out.println(ex);    
        }

        clear();
              }
          }//clear text fields by calling clear method below :D 
        barcode_update(); //update barcode
        productsTable(); //update products table
       
    }//GEN-LAST:event_grn_btn_enterActionPerformed

    private void grn_txt_quantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grn_txt_quantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_grn_txt_quantityActionPerformed

    private void grn_txt_yearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grn_txt_yearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_grn_txt_yearActionPerformed

    private void grn_txt_ex_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grn_txt_ex_dateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_grn_txt_ex_dateActionPerformed

    private void grn_txt_amountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grn_txt_amountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_grn_txt_amountActionPerformed

    private void grn_txt_supIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grn_txt_supIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_grn_txt_supIDActionPerformed

    private void grn_tbl_supMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grn_tbl_supMouseClicked
        grn_txt_supID.setText((String) grn_tbl_sup.getValueAt(grn_tbl_sup.getSelectedRow(), 0)); //show suppllier ID when click sup table row
       
    }//GEN-LAST:event_grn_tbl_supMouseClicked

    private void grn_tbl_productsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grn_tbl_productsMouseClicked
        grn_txt_productid.setText((String) grn_tbl_products.getValueAt(grn_tbl_products.getSelectedRow(), 0)); //show product ID when click product row
    }//GEN-LAST:event_grn_tbl_productsMouseClicked

    private void grn_txt_productidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grn_txt_productidKeyTyped
        if(evt.getKeyChar() == 22){
         grn_txt_productid.setText("");
        }
        
        if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39){
        evt.consume();
        }
    }//GEN-LAST:event_grn_txt_productidKeyTyped

    private void grn_txt_productidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grn_txt_productidKeyReleased
        if(evt.getKeyChar() == 10){
         grn_txt_supID.grabFocus();
        }
    }//GEN-LAST:event_grn_txt_productidKeyReleased

    private void grn_txt_supIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grn_txt_supIDKeyTyped
        if(evt.getKeyChar() == 22){
         grn_txt_supID.setText("");
        }
        
        if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39){
        evt.consume();
        }
    }//GEN-LAST:event_grn_txt_supIDKeyTyped

    private void grn_txt_supIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grn_txt_supIDKeyReleased
       if(evt.getKeyChar() == 10){
         grn_txt_quantity.grabFocus();
        }
    }//GEN-LAST:event_grn_txt_supIDKeyReleased

    private void grn_txt_quantityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grn_txt_quantityKeyTyped
        if(evt.getKeyChar() == 22){
         grn_txt_quantity.setText("");
        }
        
        if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39){
        evt.consume();
        }
    }//GEN-LAST:event_grn_txt_quantityKeyTyped

    private void grn_txt_quantityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grn_txt_quantityKeyReleased
        if(evt.getKeyChar() == 10){
         grn_txt_amount.grabFocus();
        }
    }//GEN-LAST:event_grn_txt_quantityKeyReleased

    private void grn_txt_amountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grn_txt_amountKeyTyped
        if(evt.getKeyChar() == 22){
         grn_txt_amount.setText("");
        }
        
        if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39){
        evt.consume();
        }
    }//GEN-LAST:event_grn_txt_amountKeyTyped

    private void grn_btn_printlblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grn_btn_printlblActionPerformed
        print_label stw= new print_label();
       stw.setVisible(true);
    }//GEN-LAST:event_grn_btn_printlblActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton grn_btn_enter;
    private javax.swing.JButton grn_btn_printlbl;
    private javax.swing.JLabel grn_lbl_barcode;
    private javax.swing.JTable grn_tbl_products;
    private javax.swing.JTable grn_tbl_sup;
    private javax.swing.JTextField grn_txt_amount;
    private javax.swing.JComboBox grn_txt_dates;
    private javax.swing.JComboBox grn_txt_ex_date;
    private javax.swing.JComboBox grn_txt_ex_month;
    private javax.swing.JComboBox grn_txt_ex_year;
    private javax.swing.JComboBox grn_txt_month;
    private javax.swing.JTextField grn_txt_productid;
    private javax.swing.JTextField grn_txt_quantity;
    private javax.swing.JTextField grn_txt_supID;
    private javax.swing.JComboBox grn_txt_year;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    // End of variables declaration//GEN-END:variables

    public void clear() {
        //clear text fields
        grn_txt_productid.setText("");
        grn_txt_supID.setText("");
        grn_txt_quantity.setText("");
        grn_txt_amount.setText("");
    }

  public void barcode_update(){
  
          try {
            Statement con = dbConnection.db().createStatement();
            java.sql.ResultSet next_barcode = con.executeQuery("SELECT MAX(bar_code)+1 FROM supplied_products"); //grab next barcode
            while (next_barcode.next()) {
                if(next_barcode.getString(1) == null){
                    grn_lbl_barcode.setText("1");
                }else{
                   grn_lbl_barcode.setText(next_barcode.getString("MAX(bar_code)+1"));
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
  
  }
  //load data to supplier table
  public void supTable(){
        DefaultTableModel table = (DefaultTableModel) grn_tbl_sup.getModel();
        table.setRowCount(0);
        
        try {
            Statement con = dbConnection.db().createStatement();
            java.sql.ResultSet record =  con.executeQuery("SELECT * FROM supplier_details" );
            while(record.next()){
                Vector rc = new Vector();
                rc.add(record.getString("supplier_id"));
                rc.add(record.getString("supplier_name"));
                rc.add(record.getString("sup_nic"));
                table.addRow(rc);
            }
        } catch (Exception ex) {
            Logger.getLogger(mainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
   
    }
  
  //load data to product table
   public void productsTable(){
        DefaultTableModel table = (DefaultTableModel) grn_tbl_products.getModel();
        table.setRowCount(0);
        
        try {
            Statement con = dbConnection.db().createStatement();
            java.sql.ResultSet record =  con.executeQuery("SELECT * FROM products ORDER BY product_id ASC" );
           
            while(record.next()){
                Vector rc = new Vector();
                rc.add(record.getString("product_id"));
                rc.add(record.getString("product_name"));
                rc.add(record.getString("product_price"));
                table.addRow(rc);
                
            }
             /*java.sql.ResultSet count = con.executeQuery("SELECT COUNT(*) AS allRecord FROM products");
             int totalProduct = count.getInt("allRecord");
               System.out.println(totalProduct);*/
             for(int min=0;;min++){
                java.sql.ResultSet record2 =  con.executeQuery("SELECT SUM(qauntity) AS Total_qty FROM stock  WHERE product_id='"+grn_tbl_products.getValueAt(min, 0)+"'" );
                while(record2.next()){
                grn_tbl_products.setValueAt(record2.getString("Total_qty"), min, 3);
                }
             }
            
        } catch (Exception ex) {
            Logger.getLogger(mainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
            
    }
   
  
   
    public int  GRNnullValidate(){
          
           if (grn_txt_productid.getText().equals("") || grn_txt_productid.getText() == null ) {
            
            JOptionPane.showMessageDialog(null, "You have missed product id...", "Error", 1);
            grn_txt_productid.grabFocus();
            return 1 ;

        } else if ( grn_txt_supID.getText().equals("") || grn_txt_supID.getText() == null) {
           
            JOptionPane.showMessageDialog(null, "You have missed supplier id...", "Error", 1);
            grn_txt_supID.grabFocus();
            return 1 ;
            
        } else if (grn_txt_quantity.getText().equals("") || grn_txt_quantity.getText() == null ) {
            
            JOptionPane.showMessageDialog(null, "You have missed quantity...", "Error", 1);
            grn_txt_quantity.grabFocus();
            return 1 ;
            
          } else if (grn_txt_amount.getText().equals("") || grn_txt_amount.getText() == null ) {
            
            JOptionPane.showMessageDialog(null, "You have missed amount...", "Error", 1);
            grn_txt_amount.grabFocus();
            return 1 ;
            
        }else {
          return 0 ;
        }
        
           
      
      }
   
    public int  GRNcontentValidate(){
        
         boolean val1 = isInt(grn_txt_productid.getText());
         boolean val2 = isInt(grn_txt_supID.getText());
         boolean val3 = isInt(grn_txt_quantity.getText());
         boolean val4 = isDouble(grn_txt_amount.getText());
          
           if (val1 == false || GRNexsistValidate(grn_txt_productid.getText(),"products","product_id") == 0) {
            
            JOptionPane.showMessageDialog(null, "Invalid product id...", "Error", 1);
            grn_txt_productid.grabFocus();
            return 1 ;

        } else if ( val2 == false || GRNexsistValidate(grn_txt_supID.getText(),"supplier_details","supplier_id") == 0) {
           
            JOptionPane.showMessageDialog(null, "Invalid supplier id...", "Error", 1);
            grn_txt_supID.grabFocus();
            return 1 ;
            
        } else if (val3 == false || isMin(grn_txt_quantity.getText()) == 1) {
            
            JOptionPane.showMessageDialog(null, "Invalid quantity...", "Error", 1);
            grn_txt_quantity.grabFocus();
            return 1 ;
            
          } else if (val4 == false || isMin(grn_txt_amount.getText()) == 1) {
            
            JOptionPane.showMessageDialog(null, "Invalid amount...", "Error", 1);
            grn_txt_amount.grabFocus();
            return 1 ;
            
        }else {
          return 0 ;
        }
        
           
      
      }
    
    public int  GRNexsistValidate(String id,String table, String coloumn){
        int total1 =0;
        try {            
            
            Statement con = dbConnection.db().createStatement();
             
            java.sql.ResultSet record = con.executeQuery("SELECT COUNT(*) AS totalRow FROM "+table+" WHERE "+coloumn+"='"+id+"'");
           
            while (record.next()) {
              total1 = Integer.parseInt(record.getString("totalRow"));
               
               
            }
            
        } catch (Exception e) {
             JOptionPane.showMessageDialog(null, "code error...");
        }
        if(total1 >0){
            
        return 1;
        }
        else{
            
        return 0;
        }
    }
    
          public static boolean isDouble(String s) {
    try { 
        Double.parseDouble(s); 
    } catch(NumberFormatException e) { 
        return false; 
    }
    // only got here if we didn't return false
    return true;
}
          
                   public static boolean isInt(String s) {
    try { 
        Integer.parseInt(s); 
    } catch(NumberFormatException e) { 
        return false; 
    }
    // only got here if we didn't return false
    return true;
}

    public int isMin(String st){
      
            double tryval6  = Double.parseDouble(st) ;
             
            if(tryval6 <0){
               
          return 1;
            }
            
            else{  
            return 0 ;
            }
      }
 
 
}
