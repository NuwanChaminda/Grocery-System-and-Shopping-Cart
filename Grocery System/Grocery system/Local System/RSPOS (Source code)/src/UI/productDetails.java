/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UI;
import database.dbConnection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Dhanuka
 */
public class productDetails extends javax.swing.JPanel {

    /**
     * Creates new form productDetails
     */
    public productDetails() {
        initComponents();
        clear();
        pro_btn_addNewActionPerformed(null);
        productsTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        pro_lbl_porID = new javax.swing.JLabel();
        pro_txt_name = new javax.swing.JTextField();
        pro_txt_price = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        pro_txtarea_details = new javax.swing.JTextArea();
        pro_btn_addNew = new javax.swing.JButton();
        pro_btn_save = new javax.swing.JButton();
        pro_btn_update = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        pro_tbl_products = new javax.swing.JTable();

        setBackground(new java.awt.Color(234, 234, 254));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        setLayout(null);

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jLabel1.setText("Product Details");
        add(jLabel1);
        jLabel1.setBounds(255, 25, 152, 26);

        jLabel2.setText("Product ID");
        add(jLabel2);
        jLabel2.setBounds(37, 137, 60, 30);

        jLabel3.setText("Name");
        add(jLabel3);
        jLabel3.setBounds(37, 193, 40, 14);

        jLabel4.setText("Price");
        add(jLabel4);
        jLabel4.setBounds(37, 241, 40, 14);

        jLabel5.setText("Details");
        add(jLabel5);
        jLabel5.setBounds(37, 305, 60, 14);
        add(pro_lbl_porID);
        pro_lbl_porID.setBounds(110, 137, 183, 30);

        pro_txt_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pro_txt_nameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pro_txt_nameKeyTyped(evt);
            }
        });
        add(pro_txt_name);
        pro_txt_name.setBounds(110, 185, 183, 30);

        pro_txt_price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pro_txt_priceKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pro_txt_priceKeyTyped(evt);
            }
        });
        add(pro_txt_price);
        pro_txt_price.setBounds(110, 233, 183, 30);

        pro_txtarea_details.setColumns(20);
        pro_txtarea_details.setRows(5);
        pro_txtarea_details.setPreferredSize(new java.awt.Dimension(170, 100));
        pro_txtarea_details.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pro_txtarea_detailsKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(pro_txtarea_details);

        add(jScrollPane1);
        jScrollPane1.setBounds(110, 280, 240, 130);

        pro_btn_addNew.setText("Add New");
        pro_btn_addNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pro_btn_addNewActionPerformed(evt);
            }
        });
        add(pro_btn_addNew);
        pro_btn_addNew.setBounds(37, 440, 80, 25);

        pro_btn_save.setText("Save");
        pro_btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pro_btn_saveActionPerformed(evt);
            }
        });
        add(pro_btn_save);
        pro_btn_save.setBounds(130, 440, 70, 25);

        pro_btn_update.setText("Update");
        pro_btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pro_btn_updateActionPerformed(evt);
            }
        });
        add(pro_btn_update);
        pro_btn_update.setBounds(210, 440, 80, 25);

        jButton4.setText("Delete");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        add(jButton4);
        jButton4.setBounds(300, 440, 70, 25);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        add(jSeparator1);
        jSeparator1.setBounds(380, 130, 40, 340);

        jLabel6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel6.setText("Choose Product");
        add(jLabel6);
        jLabel6.setBounds(480, 110, 140, 22);
        add(jSeparator4);
        jSeparator4.setBounds(390, 120, 80, 10);
        add(jSeparator5);
        jSeparator5.setBounds(620, 120, 70, 10);

        pro_tbl_products.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Name", "Stock Qty."
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        pro_tbl_products.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pro_tbl_productsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(pro_tbl_products);

        add(jScrollPane2);
        jScrollPane2.setBounds(390, 140, 300, 330);
    }// </editor-fold>//GEN-END:initComponents

    private void pro_btn_addNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pro_btn_addNewActionPerformed
        clear();
           try {
            Statement con = dbConnection.db().createStatement();
            ResultSet next_pro_id = con.executeQuery("SELECT MAX(product_id)+1 FROM products");
            while (next_pro_id.next()) {
                if(next_pro_id.getString(1) == null){
                    pro_lbl_porID.setText("1");
                }else{
                    pro_lbl_porID.setText(next_pro_id.getString("MAX(product_id)+1"));
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
       productsTable();
    }//GEN-LAST:event_pro_btn_addNewActionPerformed

    private void pro_btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pro_btn_updateActionPerformed
        
          int tryval = PROnullValidate();
       
       if(tryval == 0){ 
           
           
           
            int tryval3 = PROcontentValidate();
            
               if(tryval3 == 0){
     
                     int tryval4 = isMin();
                   
                   if(tryval4 == 0){
        
        try {
            Statement con = dbConnection.db().createStatement();
            con.executeUpdate("UPDATE products SET product_name='" + pro_txt_name.getText() + "', product_price='"+pro_txt_price.getText()+"' , product_details='" + pro_txtarea_details.getText()+ "'WHERE  product_id='" + pro_lbl_porID.getText() + "' ");
            JOptionPane.showMessageDialog(null, "Successfull Updated");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, " error occured..");
            System.out.println(e);
        }
        clear();
                   }
               }
       }
       productsTable();
    }//GEN-LAST:event_pro_btn_updateActionPerformed

    private void pro_btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pro_btn_saveActionPerformed
        
         int tryval = PROnullValidate();
       
       if(tryval == 0){ 
           
            int tryval2 = PRODUCTexsistUpdateValidate();
            
            if (tryval2 ==0){
           
            int tryval3 = PROcontentValidate();
            
               if(tryval3 == 0){
                   
                   int tryval4 = isMin();
                   
                   if(tryval4 == 0){
        
        try {
            Statement con = dbConnection.db().createStatement();
            con.executeUpdate("INSERT INTO products VALUES('"+pro_lbl_porID.getText()+"', '" + pro_txt_name.getText() + "','"+pro_txt_price.getText()+"','" + pro_txtarea_details.getText() + "','default.jpg')");
            JOptionPane.showMessageDialog(null, "Successfully Inserted");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error occured..");
            System.out.println(e);
        }
        clear();
                   }
               }
            }
       }
         
       productsTable();
    }//GEN-LAST:event_pro_btn_saveActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
         
         if(JOptionPane.showConfirmDialog(null,"Are You sure want to Delete this...?","Delete",JOptionPane.YES_NO_OPTION)==0){
        try {
            Statement con = dbConnection.db().createStatement();
            con.executeUpdate("DELETE FROM products WHERE product_id='"+pro_lbl_porID.getText()+"'");
            JOptionPane.showMessageDialog(null, "Successfully Deleted");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "code error");
            System.out.println(e);
        }
         }
          clear();
          productsTable();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void pro_tbl_productsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pro_tbl_productsMouseClicked
         pro_lbl_porID.setText((String) pro_tbl_products.getValueAt(pro_tbl_products.getSelectedRow(), 0));
         pro_txt_name.setText((String) pro_tbl_products.getValueAt(pro_tbl_products.getSelectedRow(), 1));
         
         try{
         Statement con = dbConnection.db().createStatement();
         ResultSet record =  con.executeQuery("SELECT * FROM products WHERE product_id='"+pro_tbl_products.getValueAt(pro_tbl_products.getSelectedRow(), 0)+"'" );
            while(record.next()){
            pro_txt_price.setText(record.getString("product_price"));
            pro_txtarea_details.setText(record.getString("product_details"));
            }
         }catch (Exception ex) {
            Logger.getLogger(mainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_pro_tbl_productsMouseClicked

    private void pro_txt_nameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pro_txt_nameKeyTyped
        if(evt.getKeyChar() == 22){
         pro_txt_name.setText("");
        }
        
        if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39){
        evt.consume();
        }
    }//GEN-LAST:event_pro_txt_nameKeyTyped

    private void pro_txt_nameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pro_txt_nameKeyReleased
        if(evt.getKeyChar() == 10){
         pro_txt_price.grabFocus();
        }
    }//GEN-LAST:event_pro_txt_nameKeyReleased

    private void pro_txt_priceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pro_txt_priceKeyTyped
        if(evt.getKeyChar() == 22){
         pro_txt_price.setText("");
        }
        
        if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39){
        evt.consume();
        }
    }//GEN-LAST:event_pro_txt_priceKeyTyped

    private void pro_txt_priceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pro_txt_priceKeyReleased
       if(evt.getKeyChar() == 10){
         pro_txtarea_details.grabFocus();
        }
    }//GEN-LAST:event_pro_txt_priceKeyReleased

    private void pro_txtarea_detailsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pro_txtarea_detailsKeyTyped
       if(evt.getKeyChar() == 22){
         pro_txtarea_details.setText("");
        }
        
        if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39){
        evt.consume();
        }
    }//GEN-LAST:event_pro_txtarea_detailsKeyTyped

     public void clear() {
        
        pro_lbl_porID.setText("");
        pro_txt_name.setText("");
        pro_txt_price.setText("");
        pro_txtarea_details.setText("");     
    }
     
      public void productsTable(){
        DefaultTableModel table = (DefaultTableModel) pro_tbl_products.getModel();
        table.setRowCount(0);
        
        try {
            Statement con = dbConnection.db().createStatement();
            java.sql.ResultSet record =  con.executeQuery("SELECT * FROM products ORDER BY product_id ASC" );
           
            while(record.next()){
                Vector rc = new Vector();
                rc.add(record.getString("product_id"));
                rc.add(record.getString("product_name"));
                /*rc.add(record2.getString("Total_qty"));*/
                table.addRow(rc);
                
            }
             /*java.sql.ResultSet count = con.executeQuery("SELECT COUNT(*) AS allRecord FROM products");
             int totalProduct = count.getInt("allRecord");
               System.out.println(totalProduct);*/
             for(int min=0;;min++){
                java.sql.ResultSet record2 =  con.executeQuery("SELECT SUM(qauntity) AS Total_qty FROM stock  WHERE product_id='"+pro_tbl_products.getValueAt(min, 0)+"'" );
                while(record2.next()){
                    pro_tbl_products.setValueAt(record2.getString("Total_qty"), min, 2);
                }
             }
            
        } catch (Exception ex) {
            Logger.getLogger(mainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
            
    }
      
       public int  PROnullValidate(){
          
           if (pro_txt_name.getText().equals("") || pro_txt_name.getText() == null ) {
            
            JOptionPane.showMessageDialog(null, "You have missed name...", "Error", 1);
            pro_txt_name.grabFocus();
            return 1 ;

        } else if ( pro_txt_price.getText().equals("") || pro_txt_price.getText() == null) {
           
            JOptionPane.showMessageDialog(null, "You have missed price...", "Error", 1);
            pro_txt_price.grabFocus();
            return 1 ;
            
        } else if (pro_txtarea_details.getText().equals("") || pro_txtarea_details.getText() == null ) {
            
            JOptionPane.showMessageDialog(null, "You have missed details...", "Error", 1);
            pro_txtarea_details.grabFocus();
            return 1 ;
            
        }else {
          return 0 ;
        }
        
           
      
      }
      
             public int  PROcontentValidate(){
        
         boolean val1 = isDouble(pro_txt_price.getText());
         
           if (val1 == false ) {
            
            JOptionPane.showMessageDialog(null, "Invalid price...");
          pro_txt_price.grabFocus();
            return 1 ;

           } else  {
            
          
            return 0 ;
            
          }
       }

      
      public boolean isDouble(String s) {
    try { 
        Double.parseDouble(s); 
    } catch(NumberFormatException e) { 
        return false; 
    }
    // only got here if we didn't return false
    return true;
}

      public int isMin(){
      
            double tryval6  = Double.parseDouble(pro_txt_price.getText()) ;
             
            if(tryval6 <0){
               JOptionPane.showMessageDialog(null, "Invalid price...");
          pro_txt_price.grabFocus();
          return 1;
            }
            
            else{  
            return 0 ;
            }
      }
      
         public int  PRODUCTexsistUpdateValidate(){
        int total1 =0;
        try {            
            
            Statement con = dbConnection.db().createStatement();
             
            java.sql.ResultSet record = con.executeQuery("SELECT COUNT(*) AS totalRow FROM products WHERE product_id ='"+pro_lbl_porID.getText()+"'");
           
            while (record.next()) {
              total1 = Integer.parseInt(record.getString("totalRow"));
               
               
            }
            
        } catch (Exception e) {
             JOptionPane.showMessageDialog(null, "code error...");
        }
        if(total1 >0){
            JOptionPane.showMessageDialog(null, "You cannot save an exsisting record...!");
        return 1;
        }
        else{
           
        return 0;
        }
    }
      
      

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JButton pro_btn_addNew;
    private javax.swing.JButton pro_btn_save;
    private javax.swing.JButton pro_btn_update;
    private javax.swing.JLabel pro_lbl_porID;
    private javax.swing.JTable pro_tbl_products;
    private javax.swing.JTextField pro_txt_name;
    private javax.swing.JTextField pro_txt_price;
    private javax.swing.JTextArea pro_txtarea_details;
    // End of variables declaration//GEN-END:variables
}
