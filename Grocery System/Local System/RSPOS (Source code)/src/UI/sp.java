/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Dhanuka
 */
public class sp extends javax.swing.JFrame {
 private String[] text = {"Loading...", "Initializing...", "Loading modules...",
        "Loading plug-in...", "Conneting...", "Loading Database",
        "Loading data...", "Loading libraries...", "Finalizing...", "Starting..."};
    /**
     * Creates new form sp
     */
    public static JFrame jf = null;

    public sp() {
        initComponents();

        new Thread(new Runnable() {

            public void run() {
                   
                for (int t = 0; t <= 50; t++) {
                     
                       
                    try {
                       
                        jProgressBar1.setValue(t);
                        
                        Thread.sleep(25);
                        
                    } catch (InterruptedException ex) {
                        Logger.getLogger(sp.class.getName()).log(Level.SEVERE, null, ex);
                    }
                   
                }
                if(isInternetReachable()==false){
                 
                   JOptionPane.showMessageDialog(null,"You are Not connect to the Server \nPlease Check your Connection..!","Connection Error",1);
                  dispose();
                 }else{
                 for (int t = 50; t <=100 ; t++) {
                     
                       
                    try {
                       
                        jProgressBar1.setValue(t);
                        
                        Thread.sleep(25);
                        
                    } catch (InterruptedException ex) {
                        Logger.getLogger(sp.class.getName()).log(Level.SEVERE, null, ex);
                    }
                   
                }
                hide();
                login lg = new login();
                lg.setVisible(true);
                 }
                
                 
              
           }
        }).start();
                
         new Thread(new Runnable() {

            public void run() {
                   
                for (int x = 0; x <= 10; x++) {      
                    try { 
                        loading.setText(text[x]); 
                        Thread.sleep(250); 
                    } catch (InterruptedException ex) {
                        Logger.getLogger(sp.class.getName()).log(Level.SEVERE, null, ex);
                    }                  
                }
                
            }
        }).start();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        loading = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(null);

        jProgressBar1.setBackground(new java.awt.Color(0, 0, 153));
        jProgressBar1.setForeground(new java.awt.Color(0, 0, 204));
        getContentPane().add(jProgressBar1);
        jProgressBar1.setBounds(10, 60, 380, 14);
        getContentPane().add(loading);
        loading.setBounds(170, 80, 110, 20);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/login.jpg"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 400, 140);

        setSize(new java.awt.Dimension(400, 140));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(sp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(sp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(sp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(sp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new sp().setVisible(true);
                //dis();
            }
        });
    }
public static boolean isInternetReachable()
{
    try {
        //make a URL to a known source
        URL url = new URL("http://www.google.com");

        //open a connection to that source
        HttpURLConnection urlConnect = (HttpURLConnection)url.openConnection();

        //trying to retrieve data from the source. If there
        //is no connection, this line will fail
        Object objData = urlConnect.getContent();
        System.out.println("SUCCESSFUL INTERNET CONNECTION");

    } catch (UnknownHostException e) {
        // TODO Auto-generated catch block

        System.out.println("CONNECTION FAILED");
        e.printStackTrace();
        return false;
    }
    catch (IOException e) {
        // TODO Auto-generated catch block
        System.out.println("CONNECTION FAILED");
        e.printStackTrace();
        return false;
    }
    return true;
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private static javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JLabel loading;
    // End of variables declaration//GEN-END:variables

    private static void dis() {
        Thread tr = new Thread() {
            public void run() {
                for (int zas = 0; zas < 100; zas++) {
                    try {
                        jProgressBar1.setValue(zas);
                        System.out.println(zas);
                        Thread.sleep(100);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(sp.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

                new login().setVisible(true);
                jf.dispose();
            }
        };

        tr.run();
    }

}
