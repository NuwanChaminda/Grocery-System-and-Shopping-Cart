/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UI;

import static UI.grnWindow.isDouble;
import static UI.grnWindow.isInt;
import database.dbConnection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Dhanuka
 */
public class stockManagement extends javax.swing.JPanel {

    /**
     * Creates new form stockManagement
     */
    public stockManagement() {
        initComponents();
        clear();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        stock_lbl_supDate = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        stock_lbl_exDate = new javax.swing.JLabel();
        stock_txt_barcode = new javax.swing.JTextField();
        stock_txt_qty = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        stock_lbl_proName = new javax.swing.JLabel();
        stock_lbl_proPrice = new javax.swing.JLabel();
        stock_lbl_proQty = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        stock_lbl_supID = new javax.swing.JLabel();
        stock_txt_proID = new javax.swing.JTextField();
        stock_btn_proDlt = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        stock_btn_update = new javax.swing.JButton();
        stock_btn_delete = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(234, 234, 254));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        setLayout(null);

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jLabel1.setText("Stock");
        add(jLabel1);
        jLabel1.setBounds(290, 20, 57, 26);

        jLabel2.setText("Barcode");
        add(jLabel2);
        jLabel2.setBounds(50, 130, 59, 14);

        jLabel3.setText("Supplied Date");
        add(jLabel3);
        jLabel3.setBounds(50, 180, 80, 14);

        jLabel4.setText("Expire Date");
        add(jLabel4);
        jLabel4.setBounds(50, 230, 70, 14);
        add(stock_lbl_supDate);
        stock_lbl_supDate.setBounds(150, 170, 100, 30);

        jLabel6.setText("Quantity");
        add(jLabel6);
        jLabel6.setBounds(50, 330, 56, 14);
        add(stock_lbl_exDate);
        stock_lbl_exDate.setBounds(150, 220, 110, 30);

        stock_txt_barcode.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        stock_txt_barcode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                stock_txt_barcodeFocusGained(evt);
            }
        });
        stock_txt_barcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                stock_txt_barcodeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                stock_txt_barcodeKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                stock_txt_barcodeKeyTyped(evt);
            }
        });
        add(stock_txt_barcode);
        stock_txt_barcode.setBounds(150, 120, 140, 30);

        stock_txt_qty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                stock_txt_qtyKeyTyped(evt);
            }
        });
        add(stock_txt_qty);
        stock_txt_qty.setBounds(150, 320, 60, 30);
        add(jSeparator1);
        jSeparator1.setBounds(390, 90, 100, 10);
        add(jSeparator2);
        jSeparator2.setBounds(570, 90, 100, 10);

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        add(jSeparator3);
        jSeparator3.setBounds(380, 100, 20, 330);

        jLabel5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel5.setText("Product");
        add(jLabel5);
        jLabel5.setBounds(500, 80, 70, 22);

        jLabel7.setText("Name :");
        add(jLabel7);
        jLabel7.setBounds(410, 170, 60, 14);

        jLabel8.setText("Price  :");
        add(jLabel8);
        jLabel8.setBounds(410, 220, 50, 14);

        jLabel9.setText("Total Qty. :");
        add(jLabel9);
        jLabel9.setBounds(410, 270, 70, 14);
        add(stock_lbl_proName);
        stock_lbl_proName.setBounds(490, 160, 150, 30);
        add(stock_lbl_proPrice);
        stock_lbl_proPrice.setBounds(490, 210, 150, 30);
        add(stock_lbl_proQty);
        stock_lbl_proQty.setBounds(490, 260, 50, 30);

        jLabel14.setText("Product ID :");
        add(jLabel14);
        jLabel14.setBounds(410, 130, 70, 14);

        jLabel10.setText("Supplier ID");
        add(jLabel10);
        jLabel10.setBounds(50, 280, 70, 14);
        add(stock_lbl_supID);
        stock_lbl_supID.setBounds(150, 270, 100, 30);

        stock_txt_proID.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                stock_txt_proIDInputMethodTextChanged(evt);
            }
        });
        stock_txt_proID.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                stock_txt_proIDPropertyChange(evt);
            }
        });
        stock_txt_proID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                stock_txt_proIDKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                stock_txt_proIDKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                stock_txt_proIDKeyTyped(evt);
            }
        });
        add(stock_txt_proID);
        stock_txt_proID.setBounds(490, 120, 130, 30);

        stock_btn_proDlt.setBackground(new java.awt.Color(255, 0, 51));
        stock_btn_proDlt.setForeground(new java.awt.Color(255, 255, 255));
        stock_btn_proDlt.setText("Delete");
        stock_btn_proDlt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stock_btn_proDltActionPerformed(evt);
            }
        });
        add(stock_btn_proDlt);
        stock_btn_proDlt.setBounds(500, 320, 73, 25);

        jLabel12.setText("* Press Delete if you want to remove  all the");
        jLabel12.setToolTipText("");
        jLabel12.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        add(jLabel12);
        jLabel12.setBounds(420, 370, 240, 20);

        jLabel13.setText(" quantity of this product from the stock");
        add(jLabel13);
        jLabel13.setBounds(430, 390, 220, 14);

        stock_btn_update.setText("Update");
        stock_btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stock_btn_updateActionPerformed(evt);
            }
        });
        add(stock_btn_update);
        stock_btn_update.setBounds(80, 390, 80, 25);

        stock_btn_delete.setText("Delete");
        stock_btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stock_btn_deleteActionPerformed(evt);
            }
        });
        add(stock_btn_delete);
        stock_btn_delete.setBounds(210, 390, 80, 25);

        jButton1.setText("Report");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(350, 450, 70, 25);
    }// </editor-fold>//GEN-END:initComponents

    private void stock_txt_barcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_stock_txt_barcodeKeyPressed
       clear();
    }//GEN-LAST:event_stock_txt_barcodeKeyPressed

    private void stock_txt_barcodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_stock_txt_barcodeKeyReleased
        
         try{
         Statement con = dbConnection.db().createStatement();
         ResultSet record =  con.executeQuery("SELECT * FROM supplied_products WHERE bar_code='"+stock_txt_barcode.getText()+"'" );
            while(record.next()){
            stock_lbl_supDate.setText(record.getString("supplied_date"));
            stock_lbl_exDate.setText(record.getString("expire_date"));
            stock_txt_proID.setText(record.getString("product_id"));
            stock_lbl_supID.setText(record.getString("supplier_id"));
            }
         
         ResultSet record2 =  con.executeQuery("SELECT * FROM products WHERE product_id='"+stock_txt_proID.getText()+"'" );
            while(record2.next()){
            stock_lbl_proName.setText(record2.getString("product_name"));
            stock_lbl_proPrice.setText(record2.getString("product_price"));
            } 
        ResultSet record3 =  con.executeQuery("SELECT SUM(qauntity) AS Total_qty FROM stock  WHERE product_id='"+stock_txt_proID.getText()+"'" ); 
           while(record3.next()){ 
              stock_lbl_proQty.setText(record3.getString("Total_qty"));
           }
        ResultSet record4 =  con.executeQuery("SELECT qauntity FROM stock  WHERE bar_code='"+stock_txt_barcode.getText()+"'" );   
          while(record4.next()){ 
              stock_txt_qty.setText(record4.getString("qauntity"));
           }
         }catch (Exception ex) {
            Logger.getLogger(mainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
     
    }//GEN-LAST:event_stock_txt_barcodeKeyReleased

    private void stock_txt_proIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_stock_txt_proIDKeyReleased
       try{
         Statement con = dbConnection.db().createStatement();
         ResultSet record =  con.executeQuery("SELECT * FROM products WHERE product_id='"+stock_txt_proID.getText()+"'" );
            while(record.next()){
            stock_lbl_proName.setText(record.getString("product_name"));
            stock_lbl_proPrice.setText(record.getString("product_price"));
            }
        
        ResultSet record3 =  con.executeQuery("SELECT SUM(qauntity) AS Total_qty FROM stock  WHERE product_id='"+stock_txt_proID.getText()+"'" ); 
        while(record3.next()){ 
              stock_lbl_proQty.setText(record3.getString("Total_qty"));
           }
         }catch (Exception ex) {
            Logger.getLogger(mainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_stock_txt_proIDKeyReleased

    private void stock_txt_proIDPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_stock_txt_proIDPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_stock_txt_proIDPropertyChange

    private void stock_txt_proIDInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_stock_txt_proIDInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_stock_txt_proIDInputMethodTextChanged

    private void stock_btn_proDltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stock_btn_proDltActionPerformed
         
        if (stock_txt_proID.getText().equals("") || stock_txt_proID.getText() == null ) {
            JOptionPane.showMessageDialog(null, "You have missed Product ID...", "Error", 1);
            stock_txt_proID.grabFocus();
         }
        
         else{
        
                if(isDouble(stock_txt_proID.getText()) == false){
                  JOptionPane.showMessageDialog(null, "Invalid Product ID1...");
                    stock_txt_proID.grabFocus();
                 }  
                 
                 else{           
                            
                         double min  = Double.parseDouble(stock_txt_proID.getText()) ;
                     
                       if(min<0){
                        JOptionPane.showMessageDialog(null, "Invalid Product ID2...");
                    stock_txt_proID.grabFocus();
                       }
                       
                       else{  
                           
                           int exsist = STOCKexsistValidate(stock_txt_proID.getText(),"stock","product_id");
                           
                           if(exsist == 0){
                            JOptionPane.showMessageDialog(null, "Please enter an exsisting Product ID...");
                    stock_txt_proID.grabFocus();
                           }
                           
                           else{
                if(JOptionPane.showConfirmDialog(null,"Are You sure want to Delete this...?","Delete",JOptionPane.YES_NO_OPTION)==0){     
        try {
            Statement con = dbConnection.db().createStatement();
            con.executeUpdate("DELETE FROM stock WHERE product_id='"+stock_txt_proID.getText()+"'");
            JOptionPane.showMessageDialog(null, "Successfully Deleted");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "code error");
            System.out.println(e);
        }
                }
        clear(); 
        stock_txt_barcode.setText("");
        stock_txt_proID.setText("");
        }
        }
        }
        }
    }//GEN-LAST:event_stock_btn_proDltActionPerformed

    private void stock_btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stock_btn_deleteActionPerformed
      
          if (stock_txt_barcode.getText().equals("") || stock_txt_barcode.getText() == null ) {
            JOptionPane.showMessageDialog(null, "You have missed Barcode...", "Error", 1);
            stock_txt_barcode.grabFocus();
         }
        
         else{
        
                if(isDouble(stock_txt_barcode.getText()) == false){
                  JOptionPane.showMessageDialog(null, "Invalid Barcode...");
                    stock_txt_barcode.grabFocus();
                 }  
                 
                 else{           
                            
                         double min  = Double.parseDouble(stock_txt_barcode.getText()) ;
                     
                       if(min<0){
                        JOptionPane.showMessageDialog(null, "Invalid Barcode...");
                    stock_txt_barcode.grabFocus();
                       }
                       
                       else{  
                           
                           int exsist = STOCKexsistValidate(stock_txt_barcode.getText(),"stock","bar_code");
                           
                           if(exsist == 0){
                            JOptionPane.showMessageDialog(null, "Please enter an exsisting Barcode...");
                    stock_txt_barcode.grabFocus();
                           }
                           
                           else{
               
                                if(JOptionPane.showConfirmDialog(null,"Are You sure want to Delete this...?","Delete",JOptionPane.YES_NO_OPTION)==0){
        try {
            Statement con = dbConnection.db().createStatement();
            con.executeUpdate("DELETE FROM stock WHERE bar_code='"+stock_txt_barcode.getText()+"'");
            JOptionPane.showMessageDialog(null, "Successfully Deleted");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "code error");
            System.out.println(e);
        }
                                }
        clear(); 
        stock_txt_barcode.setText("");
        stock_txt_proID.setText("");
        
                           }
                       }
                }
          }
    }//GEN-LAST:event_stock_btn_deleteActionPerformed

    private void stock_btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stock_btn_updateActionPerformed
      
           int tryval2 = STOCKnullValidate();
          
          if(tryval2 == 0)
          {
              int tryval3 =  STOCKcontentValidate();
              
              if(tryval3 == 0)
              {
        
        try {
            Statement con = dbConnection.db().createStatement();
            con.executeUpdate("UPDATE stock SET qauntity='" + stock_txt_qty.getText() + "'WHERE bar_code='" + stock_txt_barcode.getText() + "' ");
            JOptionPane.showMessageDialog(null, "Successfull Updated");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "code error111");
            System.out.println(e);
        }
       clear();
       stock_txt_barcode.setText("");
       stock_txt_proID.setText("");
              }
          }
    }//GEN-LAST:event_stock_btn_updateActionPerformed

    private void stock_txt_barcodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_stock_txt_barcodeKeyTyped
        if(evt.getKeyChar() == 22){
         stock_txt_barcode.setText("");
        }
        
        if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39){
        evt.consume();
        }
    }//GEN-LAST:event_stock_txt_barcodeKeyTyped

    private void stock_txt_proIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_stock_txt_proIDKeyPressed
        clear();
    }//GEN-LAST:event_stock_txt_proIDKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       stockReport stw= new stockReport();
       stw.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void stock_txt_barcodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_stock_txt_barcodeFocusGained
       
    }//GEN-LAST:event_stock_txt_barcodeFocusGained

    private void stock_txt_qtyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_stock_txt_qtyKeyTyped
        if(evt.getKeyChar() == 22){
         stock_txt_qty.setText("");
        }
        
        if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39){
        evt.consume();
        }
    }//GEN-LAST:event_stock_txt_qtyKeyTyped

    private void stock_txt_proIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_stock_txt_proIDKeyTyped
       if(evt.getKeyChar() == 22){
         stock_txt_proID.setText("");
        }
        
        if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39){
        evt.consume();
        }
    }//GEN-LAST:event_stock_txt_proIDKeyTyped
       
    public void clear(){
    
    stock_lbl_exDate.setText("");
    stock_lbl_supDate.setText("");
    stock_lbl_supID.setText("");
    stock_lbl_proName.setText("");
    stock_lbl_proPrice.setText("");
    stock_lbl_proQty.setText("");
    /*stock_txt_barcode.setText("");*/
   /* stock_txt_proID.setText("");*/
    stock_txt_qty.setText("");
    }

        public static boolean isDouble(String s) {
    try { 
        Double.parseDouble(s); 
    } catch(NumberFormatException e) { 
        return false; 
    }
    // only got here if we didn't return false
    return true;
    
        }
    
         public int  STOCKexsistValidate(String id,String table, String coloumn){
        int total1 =0;
        try {            
            
            Statement con = dbConnection.db().createStatement();
             
            java.sql.ResultSet record = con.executeQuery("SELECT COUNT(*) AS totalRow FROM "+table+" WHERE "+coloumn+"='"+id+"'");
           
            while (record.next()) {
              total1 = Integer.parseInt(record.getString("totalRow"));
               
               
            }
            
        } catch (Exception e) {
             JOptionPane.showMessageDialog(null, "code error22222...");
        }
        if(total1 >0){
            
        return 1;
        }
        else{
            
        return 0;
        }
    }
         
          public int  STOCKnullValidate(){
          
           if (stock_txt_barcode.getText().equals("") || stock_txt_barcode.getText() == null ) {
            
            JOptionPane.showMessageDialog(null, "You have missed Barcode...", "Error", 1);
            stock_txt_barcode.grabFocus();
            return 1 ;

        } else if ( stock_txt_qty.getText().equals("") || stock_txt_qty.getText() == null) {
           
            JOptionPane.showMessageDialog(null, "You have missed Quantity...", "Error", 1);
            stock_txt_qty.grabFocus();
            return 1 ;
            
        } else{
            
         return 0;   
        }}
        
           public int  STOCKcontentValidate(){
        
         boolean val1 = isDouble( stock_txt_barcode.getText());
         boolean val2 = isDouble( stock_txt_qty.getText());
          
           if (val1 == false) {
            
            JOptionPane.showMessageDialog(null, "Invalid Barcode...", "Error", 1);
            stock_txt_barcode.grabFocus();
            return 1 ;

        } else if ( val2 == false || isMin() == 1) {
           
            JOptionPane.showMessageDialog(null, "Invalid Quantity...", "Error", 1);
            stock_txt_qty.grabFocus();
            return 1 ;
            
        } else if (STOCKexsistValidate( stock_txt_barcode.getText(),"stock","bar_code") == 0 ) {
            
            JOptionPane.showMessageDialog(null, "Please enter an exsisting Barcode...", "Error", 1);
            stock_txt_barcode.grabFocus();
            return 1 ;
            
         
            
        }else {
          return 0 ;
        }
        
           
      
      }
           
             public int isMin(){
      
            double tryval6  = Double.parseDouble(stock_txt_qty.getText()) ;
             
            if(tryval6 <0){
               
          return 1;
            }
            
            else{  
            return 0 ;
            }
      }
          
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JButton stock_btn_delete;
    private javax.swing.JButton stock_btn_proDlt;
    private javax.swing.JButton stock_btn_update;
    private javax.swing.JLabel stock_lbl_exDate;
    private javax.swing.JLabel stock_lbl_proName;
    private javax.swing.JLabel stock_lbl_proPrice;
    private javax.swing.JLabel stock_lbl_proQty;
    private javax.swing.JLabel stock_lbl_supDate;
    private javax.swing.JLabel stock_lbl_supID;
    private javax.swing.JTextField stock_txt_barcode;
    private javax.swing.JTextField stock_txt_proID;
    private javax.swing.JTextField stock_txt_qty;
    // End of variables declaration//GEN-END:variables
}
