/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UI;

import database.dbConnection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dhanuka
 */
public class supplierDetails extends javax.swing.JPanel {

    /**
     * Creates new form subWindow
     */
    public supplierDetails() {
        initComponents();
        updateCombo();
        sup_btn_newActionPerformed(null);
        supTable();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        sup_txt_name = new javax.swing.JTextField();
        sup_txt_contact = new javax.swing.JTextField();
        sup_txt_email = new javax.swing.JTextField();
        sup_txt_address = new javax.swing.JTextField();
        sup_txt_otherDetails = new javax.swing.JTextField();
        sup_lbl_id = new javax.swing.JLabel();
        sup_btn_new = new javax.swing.JButton();
        sup_btn_save = new javax.swing.JButton();
        sup_btn_update = new javax.swing.JButton();
        sup_btn_delete = new javax.swing.JButton();
        sup_combo_supID = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        sup_txt_nic = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        sup_tbl_supDetails = new javax.swing.JTable();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setBackground(new java.awt.Color(234, 234, 254));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        setAlignmentX(5.0F);
        setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(700, 500));
        setLayout(null);

        jLabel2.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jLabel2.setText("Supplier Details");
        add(jLabel2);
        jLabel2.setBounds(253, 11, 156, 26);

        jLabel1.setText("Supplier ID");
        jLabel1.setAlignmentX(5.0F);
        jLabel1.setPreferredSize(new java.awt.Dimension(125, 14));
        add(jLabel1);
        jLabel1.setBounds(30, 140, 128, 14);

        jLabel4.setText("Supplier Name");
        jLabel4.setAlignmentX(5.0F);
        jLabel4.setPreferredSize(new java.awt.Dimension(125, 14));
        add(jLabel4);
        jLabel4.setBounds(30, 180, 128, 14);

        jLabel5.setText("Supplier Contact No");
        jLabel5.setAlignmentX(5.0F);
        jLabel5.setPreferredSize(new java.awt.Dimension(125, 14));
        add(jLabel5);
        jLabel5.setBounds(30, 260, 128, 14);

        jLabel6.setText("Supplier Email");
        jLabel6.setAlignmentX(5.0F);
        jLabel6.setPreferredSize(new java.awt.Dimension(125, 14));
        add(jLabel6);
        jLabel6.setBounds(30, 300, 128, 14);

        jLabel7.setText("Other Details");
        jLabel7.setAlignmentX(5.0F);
        jLabel7.setPreferredSize(new java.awt.Dimension(125, 14));
        add(jLabel7);
        jLabel7.setBounds(30, 380, 128, 14);

        jLabel9.setText("Supplier Address");
        jLabel9.setAlignmentX(5.0F);
        jLabel9.setPreferredSize(new java.awt.Dimension(125, 14));
        add(jLabel9);
        jLabel9.setBounds(30, 340, 128, 14);

        sup_txt_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sup_txt_nameActionPerformed(evt);
            }
        });
        sup_txt_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                sup_txt_nameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sup_txt_nameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sup_txt_nameKeyTyped(evt);
            }
        });
        add(sup_txt_name);
        sup_txt_name.setBounds(180, 180, 170, 30);

        sup_txt_contact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sup_txt_contactActionPerformed(evt);
            }
        });
        sup_txt_contact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sup_txt_contactKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sup_txt_contactKeyTyped(evt);
            }
        });
        add(sup_txt_contact);
        sup_txt_contact.setBounds(180, 260, 170, 30);

        sup_txt_email.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sup_txt_emailKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sup_txt_emailKeyTyped(evt);
            }
        });
        add(sup_txt_email);
        sup_txt_email.setBounds(180, 300, 170, 30);

        sup_txt_address.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sup_txt_addressKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sup_txt_addressKeyTyped(evt);
            }
        });
        add(sup_txt_address);
        sup_txt_address.setBounds(180, 340, 170, 30);

        sup_txt_otherDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sup_txt_otherDetailsActionPerformed(evt);
            }
        });
        sup_txt_otherDetails.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sup_txt_otherDetailsKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sup_txt_otherDetailsKeyTyped(evt);
            }
        });
        add(sup_txt_otherDetails);
        sup_txt_otherDetails.setBounds(180, 380, 170, 30);
        add(sup_lbl_id);
        sup_lbl_id.setBounds(180, 140, 170, 20);

        sup_btn_new.setText("Add New");
        sup_btn_new.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sup_btn_newActionPerformed(evt);
            }
        });
        add(sup_btn_new);
        sup_btn_new.setBounds(20, 430, 90, 25);

        sup_btn_save.setText("Save");
        sup_btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sup_btn_saveActionPerformed(evt);
            }
        });
        add(sup_btn_save);
        sup_btn_save.setBounds(120, 430, 80, 25);

        sup_btn_update.setText("Update");
        sup_btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sup_btn_updateActionPerformed(evt);
            }
        });
        add(sup_btn_update);
        sup_btn_update.setBounds(210, 430, 80, 25);
        sup_btn_update.getAccessibleContext().setAccessibleName("75");

        sup_btn_delete.setText("Delete");
        sup_btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sup_btn_deleteActionPerformed(evt);
            }
        });
        add(sup_btn_delete);
        sup_btn_delete.setBounds(300, 430, 80, 25);

        sup_combo_supID.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select ID" }));
        sup_combo_supID.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                sup_combo_supIDItemStateChanged(evt);
            }
        });
        sup_combo_supID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sup_combo_supIDActionPerformed(evt);
            }
        });
        add(sup_combo_supID);
        sup_combo_supID.setBounds(180, 90, 103, 20);

        jLabel3.setText("NIC");
        add(jLabel3);
        jLabel3.setBounds(30, 220, 128, 14);

        sup_txt_nic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sup_txt_nicKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sup_txt_nicKeyTyped(evt);
            }
        });
        add(sup_txt_nic);
        sup_txt_nic.setBounds(180, 220, 170, 30);
        add(jSeparator1);
        jSeparator1.setBounds(400, 115, 60, 20);

        jLabel8.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel8.setText("Choose Supplier");
        add(jLabel8);
        jLabel8.setBounds(470, 100, 140, 30);
        add(jSeparator2);
        jSeparator2.setBounds(610, 115, 60, 20);

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        add(jSeparator3);
        jSeparator3.setBounds(390, 130, 10, 330);

        sup_tbl_supDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Supplier ID", "Name", "NIC"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        sup_tbl_supDetails.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        sup_tbl_supDetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sup_tbl_supDetailsMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                sup_tbl_supDetailsMouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(sup_tbl_supDetails);

        add(jScrollPane1);
        jScrollPane1.setBounds(400, 140, 290, 310);
    }// </editor-fold>//GEN-END:initComponents

    private void sup_txt_contactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sup_txt_contactActionPerformed
        
    }//GEN-LAST:event_sup_txt_contactActionPerformed

    private void sup_txt_otherDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sup_txt_otherDetailsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sup_txt_otherDetailsActionPerformed

    private void sup_btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sup_btn_saveActionPerformed
        
        int tryval1 = SUPnullValidate();
       
       if(tryval1 == 0) 
       {
           int tryUpdateVal = SUPexsistUpdateValidate();
           
           if(tryUpdateVal == 0)
           {
               
           int tryval2 = SUPcontentValidate();
           
           if(tryval2 == 0)
           {
        
        try {
            Statement con = dbConnection.db().createStatement();
            con.executeUpdate("INSERT INTO supplier_details VALUES('"+sup_lbl_id.getText()+"', '" + sup_txt_name.getText() + "','"+sup_txt_nic.getText()+"','" + sup_txt_contact.getText() + "','" + sup_txt_email.getText() + "','" + sup_txt_address.getText() + "','" + sup_txt_otherDetails.getText() + "')");
            JOptionPane.showMessageDialog(null, "Successfully Inserted");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "code error");
            System.out.println(e);
        }
        clear();
           }
           }
       }
        updateCombo();
        supTable();
    }//GEN-LAST:event_sup_btn_saveActionPerformed

    private void sup_btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sup_btn_updateActionPerformed
        
         int tryval1 = SUPnullValidate();
       
       if(tryval1 == 0) 
       {
           
           int tryval2 = SUPcontentValidate();
           
           if(tryval2 == 0)
           {
        
        try {
            Statement con = dbConnection.db().createStatement();
            con.executeUpdate("UPDATE supplier_details SET supplier_name='" + sup_txt_name.getText() + "', sup_nic='"+sup_txt_nic.getText()+"' , supplier_phone='" + sup_txt_contact.getText() + "' , supplier_email='" + sup_txt_email.getText() + "', supplier_address='" + sup_txt_address.getText() + "', other_details='" + sup_txt_otherDetails.getText() + "' WHERE supplier_id='" + sup_lbl_id.getText() + "' ");
            JOptionPane.showMessageDialog(null, "Successfull Updated");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "code error");
            System.out.println(e);
        }
        clear();
           }
       }
        updateCombo();
        supTable();
    }//GEN-LAST:event_sup_btn_updateActionPerformed

    private void sup_combo_supIDItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_sup_combo_supIDItemStateChanged
        System.out.println("ok");
        try {            
            String sup_id = sup_combo_supID.getSelectedItem().toString();
            System.out.println(sup_id);
            Statement con = dbConnection.db().createStatement();
            
            ResultSet record = con.executeQuery("SELECT * FROM supplier_details WHERE supplier_id='" + sup_id + "'");
            while (record.next()) {
                sup_lbl_id.setText(record.getString("supplier_id"));
                sup_txt_name.setText(record.getString("supplier_name"));
                sup_txt_nic.setText(record.getString("sup_nic"));
                sup_txt_contact.setText(record.getString("supplier_phone"));
                sup_txt_email.setText(record.getString("supplier_email"));
                sup_txt_address.setText(record.getString("supplier_address"));
                sup_txt_otherDetails.setText(record.getString("other_details"));
                
            }
            
        } catch (Exception e) {
            
        }
        
    }//GEN-LAST:event_sup_combo_supIDItemStateChanged

    private void sup_btn_newActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sup_btn_newActionPerformed
        
        clear();
        updateCombo();
        
        sup_combo_supID.setSelectedItem("Select ID");
        try {
            Statement con = dbConnection.db().createStatement();
            ResultSet next_sup_id = con.executeQuery("SELECT MAX(supplier_id)+1 FROM supplier_details");
            while (next_sup_id.next()) {
                if(next_sup_id.getString(1) == null){
                    sup_lbl_id.setText("1");
                }else{
                    sup_lbl_id.setText(next_sup_id.getString("MAX(supplier_id)+1"));
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        supTable();
    }//GEN-LAST:event_sup_btn_newActionPerformed

    private void sup_txt_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sup_txt_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sup_txt_nameActionPerformed

    private void sup_btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sup_btn_deleteActionPerformed
       
         if(JOptionPane.showConfirmDialog(null,"Are You sure want to Delete this...?","Delete",JOptionPane.YES_NO_OPTION)==0){
        try {
            Statement con = dbConnection.db().createStatement();
            con.executeUpdate("DELETE FROM supplier_details WHERE supplier_id='"+sup_lbl_id.getText()+"'");
            JOptionPane.showMessageDialog(null, "Successfully Deleted");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "code error");
            System.out.println(e);
        }
         }
      updateCombo();
      clear();
      supTable();
      sup_btn_newActionPerformed(null);
    }//GEN-LAST:event_sup_btn_deleteActionPerformed

    private void sup_tbl_supDetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sup_tbl_supDetailsMouseClicked
        sup_lbl_id.setText((String) sup_tbl_supDetails.getValueAt(sup_tbl_supDetails.getSelectedRow(), 0));
        sup_txt_name.setText((String) sup_tbl_supDetails.getValueAt(sup_tbl_supDetails.getSelectedRow(), 1));
        sup_txt_nic.setText((String) sup_tbl_supDetails.getValueAt(sup_tbl_supDetails.getSelectedRow(), 2));
            
               try{
         Statement con = dbConnection.db().createStatement();
         ResultSet record =  con.executeQuery("SELECT * FROM supplier_details WHERE supplier_id='"+sup_tbl_supDetails.getValueAt(sup_tbl_supDetails.getSelectedRow(), 0)+"'" );
            while(record.next()){
            sup_txt_address.setText(record.getString("supplier_address"));
            sup_txt_contact.setText(record.getString("supplier_phone"));
            sup_txt_otherDetails.setText(record.getString("other_details"));
            sup_txt_email.setText(record.getString("supplier_email"));
            }
         }catch (Exception ex) {
            Logger.getLogger(mainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        

    }//GEN-LAST:event_sup_tbl_supDetailsMouseClicked

    private void sup_combo_supIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sup_combo_supIDActionPerformed
       
    }//GEN-LAST:event_sup_combo_supIDActionPerformed

    private void sup_txt_nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sup_txt_nameKeyPressed
        
    }//GEN-LAST:event_sup_txt_nameKeyPressed

    private void sup_txt_nameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sup_txt_nameKeyReleased
        if(evt.getKeyChar() == 10){
         sup_txt_nic.grabFocus();
        }
    }//GEN-LAST:event_sup_txt_nameKeyReleased

    private void sup_txt_nameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sup_txt_nameKeyTyped
        if(evt.getKeyChar() == 22){
            sup_txt_name.setText("");
        }
        
        if(evt.getKeyChar()== 34 || evt.getKeyChar() == 39){
            evt.consume();
        }
    }//GEN-LAST:event_sup_txt_nameKeyTyped

    private void sup_txt_nicKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sup_txt_nicKeyTyped
        // TODO add your handling code here:
          if(evt.getKeyChar() == 22){
         sup_txt_nic.setText("");
        }
        
        if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39){
        evt.consume();
        }
    }//GEN-LAST:event_sup_txt_nicKeyTyped

    private void sup_txt_nicKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sup_txt_nicKeyReleased
        // TODO add your handling code here:
         if(evt.getKeyChar() == 10){
         sup_txt_contact.grabFocus();
        }
    }//GEN-LAST:event_sup_txt_nicKeyReleased

    private void sup_txt_contactKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sup_txt_contactKeyTyped
         if(evt.getKeyChar() == 22){
         sup_txt_contact.setText("");
        }
        
        if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39){
        evt.consume();
        }
    }//GEN-LAST:event_sup_txt_contactKeyTyped

    private void sup_txt_contactKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sup_txt_contactKeyReleased
         if(evt.getKeyChar() == 10){
         sup_txt_email.grabFocus();
        }
    }//GEN-LAST:event_sup_txt_contactKeyReleased

    private void sup_txt_emailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sup_txt_emailKeyTyped
          if(evt.getKeyChar() == 22){
         sup_txt_email.setText("");
        }
        
        if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39){
        evt.consume();
        }
    }//GEN-LAST:event_sup_txt_emailKeyTyped

    private void sup_txt_emailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sup_txt_emailKeyReleased
      if(evt.getKeyChar() == 10){
         sup_txt_address.grabFocus();
        }
    }//GEN-LAST:event_sup_txt_emailKeyReleased

    private void sup_txt_addressKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sup_txt_addressKeyTyped
        // TODO add your handling code here:
         if(evt.getKeyChar() == 22){
         sup_txt_address.setText("");
        }
        
        if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39){
        evt.consume();
        }
    }//GEN-LAST:event_sup_txt_addressKeyTyped

    private void sup_txt_addressKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sup_txt_addressKeyReleased
        if(evt.getKeyChar() == 10){
         sup_txt_otherDetails.grabFocus();
        }
    }//GEN-LAST:event_sup_txt_addressKeyReleased

    private void sup_txt_otherDetailsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sup_txt_otherDetailsKeyTyped
       if(evt.getKeyChar() == 22){
         sup_txt_otherDetails.setText("");
        }
        
        if(evt.getKeyChar() == 34 || evt.getKeyChar() == 39){
        evt.consume();
        }
    }//GEN-LAST:event_sup_txt_otherDetailsKeyTyped

    private void sup_txt_otherDetailsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sup_txt_otherDetailsKeyReleased
         if(evt.getKeyChar() == 10){
         sup_btn_save.grabFocus();
        }
    }//GEN-LAST:event_sup_txt_otherDetailsKeyReleased

    private void sup_tbl_supDetailsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sup_tbl_supDetailsMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_sup_tbl_supDetailsMouseEntered
    
    
    
    public void updateCombo() {
        sup_combo_supID.removeAllItems();
        sup_combo_supID.addItem("Select ID");
        try {
            Statement con = dbConnection.db().createStatement();
            ResultSet record = con.executeQuery("SELECT supplier_id FROM supplier_details ORDER BY supplier_id");
            while (record.next()) {
                sup_combo_supID.addItem(record.getString("supplier_id"));
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(mainWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(mainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    public void supTable() {
        DefaultTableModel table = (DefaultTableModel) sup_tbl_supDetails.getModel();
        table.setRowCount(0);
        
        try {
            Statement con = dbConnection.db().createStatement();
            java.sql.ResultSet record =  con.executeQuery("SELECT * FROM supplier_details" );
            while(record.next()){
                Vector rc = new Vector();
                rc.add(record.getString("supplier_id"));
                rc.add(record.getString("supplier_name"));
                rc.add(record.getString("sup_nic"));
                table.addRow(rc);
            }
        } catch (Exception ex) {
            Logger.getLogger(mainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
   
    }

    public void clear() {
        
        sup_txt_name.setText("");
        sup_txt_contact.setText("");
        sup_txt_email.setText("");
        sup_txt_address.setText("");
        sup_txt_otherDetails.setText("");
        sup_txt_nic.setText("");
        
    }

     public int  SUPnullValidate(){
          
           if (sup_txt_name.getText().equals("") || sup_txt_name.getText() == null ) {
            
            JOptionPane.showMessageDialog(null, "You have missed Supplier Name...", "Error", 1);
            sup_txt_name.grabFocus();
            return 1 ;

        } else if ( sup_txt_nic.getText().equals("") || sup_txt_nic.getText() == null) {
           
            JOptionPane.showMessageDialog(null, "You have missed supplier NIC...", "Error", 1);
            sup_txt_nic.grabFocus();
            return 1 ;
            
        } else if (sup_txt_contact.getText().equals("") || sup_txt_contact.getText() == null ) {
            
            JOptionPane.showMessageDialog(null, "You have missed Supplier Contact...", "Error", 1);
            sup_txt_contact.grabFocus();
            return 1 ;
            
          } else if (sup_txt_email.getText().equals("") || sup_txt_email.getText() == null ) {
            
            JOptionPane.showMessageDialog(null, "You have missed Supplier Email...", "Error", 1);
            sup_txt_email.grabFocus();
            return 1 ;
            
             } else if (sup_txt_address.getText().equals("") || sup_txt_address.getText() == null ) {
            
            JOptionPane.showMessageDialog(null, "You have missed Supplier Address...", "Error", 1);
            sup_txt_address.grabFocus();
            return 1 ;
            
             } else if (sup_txt_otherDetails.getText().equals("") || sup_txt_otherDetails.getText() == null ) {
            
            JOptionPane.showMessageDialog(null, "You have missed Other details...", "Error", 1);
            sup_txt_otherDetails.grabFocus();
            return 1 ;
            
        }else {
          return 0 ;
        }
        
           
      
      }
   
       public int  SUPcontentValidate(){
        
         boolean val1 = isCharTen(sup_txt_nic.getText());
         boolean val2 = isInt(sup_txt_contact.getText());
         boolean val3 = isCharTen(sup_txt_contact.getText());
       
          
           if (val1 == false || isNIC(sup_txt_nic.getText()) == false) {
            
            JOptionPane.showMessageDialog(null, "Invalid NIC...", "Error", 1);
            sup_txt_nic.grabFocus();
            return 1 ;

        } else if ( val2 == false || val3 == false) {
           
            JOptionPane.showMessageDialog(null, "Invalid contact...", "Error", 1);
            sup_txt_contact.grabFocus();
            return 1 ;
            
        } else  {
            
           
            return 0 ;
            
          }
       }
  
       
                   public static boolean isInt(String s) {
    try { 
        Integer.parseInt(s); 
    } catch(NumberFormatException e) { 
        return false; 
    }
    // only got here if we didn't return false
    return true;
}
                   
         public static boolean isChar(char ch) {
     
        
         int charval = Character.getNumericValue(ch); 
         
         if(charval >= 10 || charval == -1){
         return false;
         }
         else{
             return true;
                     }
   
         
}
                   
                     public static boolean isCharTen(String ten) {
   
                       if(ten.length() == 10){
                       return true;
                       }
                       else{
    // only got here if we didn't return false
    return false;
                       }
}
                     
                    public boolean isNIC(String str){
                     
                    char[] cArray = str.toCharArray();
                    
                    int count =0;
                    for(int x=0; x<(cArray.length)-1 ; x++){
                       
                        if( isChar(cArray[x]) == false){
                        count++;
                        }
                    }
                    
                    
                    if(count>0 || Character.getNumericValue(cArray[9]) != 31){
                    return false;
                    }
                    else{
                    return true;
                    }
                     }
                    
            public int  SUPexsistUpdateValidate(){
        int total1 =0;
        try {            
            
            Statement con = dbConnection.db().createStatement();
             
            java.sql.ResultSet record = con.executeQuery("SELECT COUNT(*) AS totalRow FROM supplier_details WHERE supplier_id ='"+sup_lbl_id.getText()+"'");
           
            while (record.next()) {
              total1 = Integer.parseInt(record.getString("totalRow"));
               
               
            }
            
        } catch (Exception e) {
             JOptionPane.showMessageDialog(null, "code error...");
        }
        if(total1 >0){
            JOptionPane.showMessageDialog(null, "You cannot save an exsisting record...!");
        return 1;
        }
        else{
           
        return 0;
        }
    }

    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JButton sup_btn_delete;
    private javax.swing.JButton sup_btn_new;
    private javax.swing.JButton sup_btn_save;
    private javax.swing.JButton sup_btn_update;
    private javax.swing.JComboBox sup_combo_supID;
    private javax.swing.JLabel sup_lbl_id;
    private javax.swing.JTable sup_tbl_supDetails;
    private javax.swing.JTextField sup_txt_address;
    private javax.swing.JTextField sup_txt_contact;
    private javax.swing.JTextField sup_txt_email;
    private javax.swing.JTextField sup_txt_name;
    private javax.swing.JTextField sup_txt_nic;
    private javax.swing.JTextField sup_txt_otherDetails;
    // End of variables declaration//GEN-END:variables

}
